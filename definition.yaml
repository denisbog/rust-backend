openapi: "3.0.1"
info:
  title: "Imported on 2024-01-27T18:08:16Z"
  version: "2024-01-27T18:08:19Z"
servers:
- url: "https://rjlu93rv4h.execute-api.eu-central-1.amazonaws.com/{basePath}"
  variables:
    basePath:
      default: "api"
security:
  - bearer: []
paths:
  /login:
    get:
      responses:
        "302":
          description: "302 response"
          headers:
            location:
              schema:
                type: string
  /authorized:
    get:
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
      responses:
        "302":
          description: "302 response"
          headers:
            location:
              schema:
                type: string
            Set-Cookie:
              schema: 
                type: string
                example: session=abcde12345; SameSite=Lax; Path=/; HttpOnly



  /items:
    get:
      security:
        - cookieAuth: []
      description: Returns a list of users.
      parameters:
        - $ref : "#/components/parameters/LastEvaluatedKey"
        - name: category
          in: query
          required: false
          schema:
            type: string
        - name: subcategory
          in: query
          required: false
          schema:
            type: string
        - name: lat 
          in: query
          required: false
          schema:
            type: number
        - name: long 
          in: query
          required: false
          schema:
            type: number
        - name: r
          in: query
          required: false
          schema:
            type: number
        - name: q
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/items"
    put:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/item"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                type: string
  /items/{id}:
    get:
      parameters:
        - $ref : "#/components/parameters/id"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/item"
    post:
      parameters:
        - $ref : "#/components/parameters/id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/item"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                type: string
    delete:
      parameters:
        - $ref : "#/components/parameters/id"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                type: string
  /items/{id}/content:
    get:
      parameters:
        - $ref : "#/components/parameters/id"
      responses:
        "200":
          description: "200 response"
          content:
            image/*:
              schema:
                type: string
                format: binary
    put:
      parameters:
        - $ref : "#/components/parameters/id"
      requestBody:
        content:
          image/*:
            schema:
              type: string
              format: binary
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                type: string 





                  
  /my-items:
    get:
      parameters:
        - $ref : "#/components/parameters/LastEvaluatedKey"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/items"
  /my-related:
    get:
      parameters:
        - $ref : "#/components/parameters/LastEvaluatedKey"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/items"







  /reservations:
    get:
      parameters:
        - $ref : "#/components/parameters/LastEvaluatedKey"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reservations"
    put:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/reservation"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                type: string
  /reservations/{id}:
    get:
      parameters:
        - $ref : "#/components/parameters/id"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reservation"
    post:
      parameters:
        - $ref : "#/components/parameters/id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/reservation"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                type: string
    delete:
      parameters:
        - $ref : "#/components/parameters/id"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                type: string



  /reservations/{id}/accept:
    post:
      parameters:
        - $ref : "#/components/parameters/id"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                type: string
  /reservations/{id}/decline:
    post:
      parameters:
        - $ref : "#/components/parameters/id"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                type: string
  /reservations/{id}/return:
    post:
      parameters:
        - $ref : "#/components/parameters/id"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                type: string



  /users:
    get:
      parameters:
        - $ref : "#/components/parameters/LastEvaluatedKey"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/users"
  /users/{id}:
    get:
      parameters:
        - $ref : "#/components/parameters/id"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
    post:
      parameters:
        - $ref : "#/components/parameters/id"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                type: string
    delete:
      parameters:
        - $ref : "#/components/parameters/id"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                type: string
  /search:
    get:
      security:
        - cookieAuth: []
      parameters:
        - name: text
          in: query
          required: true
          schema:
            type: string
        - name: category
          in: query
          required: false
          schema:
            type: string
        - name: subcategory
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/items"
components:
  parameters:
    id:
      name: id
      in: path
      required: true
      schema:
        type: string
    LastEvaluatedKey:
      name: LastEvaluatedKey
      in: query
      schema:
        type: string
  security:
    bearer:
      type: http
      schema: bearer
      bearerFormat:
  securitySchemes:
    cookieAuth:         # arbitrary name for the security scheme; will be used in the "security" key later
      type: apiKey
      in: cookie
      name: session 
  schemas:
    reservation:
      type: object
      properties:
        id:
          type: string
        message:
          type: string
        created:
          type: string
          format: date-time
        item:
          type: string
        user:
          type: string
    user:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        about:
          type: string
        avatar:
          type: string
          format: uri
        email:
          type: string
          format: email
        joined:
          type: string
          format: date-time
        lastLogin:
          type: string
          format: date-time
    item:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        priceType:
          type: string
        price:
          type: number
        collection:
          type: string
        place:
          type: object
          properties:
            lat:
              type: number
            lng:
              type: number
            description:
              type: string
        category:
          type: string
        subcategory:
          type: string
        user:
          type: string
        reserved:
          type: string
        status:
          type: string
        userName:
          type: string
        userEmail:
          type: string
        userAvatar:
          type: string
    reservations:
      required:
      - "Items"
      type: "object"
      properties:
        Items:
          type: "array"
          items:
            $ref: "#/components/schemas/reservation"
        LastEvaluatedKey:
          type: "string"
    items:
      required:
      - "Items"
      type: "object"
      properties:
        Items:
          type: "array"
          items:
            $ref: "#/components/schemas/item"
        LastEvaluatedKey:
          type: "string"
    users:
      required:
      - "Items"
      type: "object"
      properties:
        Items:
          type: "array"
          items:
            $ref: "#/components/schemas/user"
        LastEvaluatedKey:
          type: "string"
